apiVersion: apps/v1
kind: Deployment
metadata:
  name: camel-quarkus-kafka-api-producer
  namespace: <YOUR USER>
  labels:
    app.kubernetes.io/managed-by: quarkus
    app.kubernetes.io/name: camel-quarkus-kafka-api-producer
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.openshift.io/runtime: quarkus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: camel-quarkus-kafka-api-producer
      app.kubernetes.io/version: 1.0.0-SNAPSHOT
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: quarkus
        app.kubernetes.io/name: camel-quarkus-kafka-api-producer
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
        app.openshift.io/runtime: quarkus
      annotations:
        app.openshift.io/vcs-url: <<unknown>>
        app.quarkus.io/build-timestamp: '2024-06-05 - 21:36:34 +0000'
        app.quarkus.io/commit-id: b0044d61bbd496562fad7ae92402f2db6544d0c5
    spec:
      volumes:
        - name: truststore-secret
          secret:
            secretName: truststore-secret
            defaultMode: 420
            optional: false
      containers:
        - name: camel-quarkus-kafka-api-producer
          image: 'quay.io/rhn_support_omelo/camel-quarkus-api-producer'
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: 'kafka-cluster-kafka-bootstrap-kafka.apps.cluster-rccpv.rccpv.sandbox2416.opentlc.com:443'
            - name: KAFKA_PRODUCER_BUFFER_MEMORY_SIZE
              value: '63554432'
            - name: KAFKA_PRODUCER_SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_PRODUCER_BATCH_SIZE
              value: '16384'
            - name: OTEL_EXPORTER_OTLP_INSECURE
              value: 'true'
            - name: KAFKA_TOPIC
              value: events
            - name: KAFKA_PRODUCER_REQUIRED_ACKS
              value: '0'
            - name: KAFKA_PRODUCER_LINGER_MS
              value: '1'
            - name: KAFKA_PRODUCER_SECURITY_PROTOCOL
              value: SASL_SSL
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: 'http://jaeger-production-collector.tracing-system.svc.cluster.local:4317'
            - name: KAFKA_PRODUCER_COMPRESSION_CODEC
              value: none
            - name: KAFKA_PRODUCER_JAAS_CONFIG
              value: org.apache.kafka.common.security.scram.ScramLoginModule required username=redhat-user password=redhat123;
            - name: KAFKA_PRODUCER_TRUSTSTORE_LOCATION
              value: /etc/security/truststore/truststore.jks
            - name: KAFKA_PRODUCER_TRUSTSTORE_PASSWORD
              value: redhat
            - name: JAVA_APP_JAR
              value: /deployments/quarkus-run.jar
          volumeMounts:
            - name: truststore-secret
              mountPath: /etc/security/truststore
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler

---

apiVersion: v1
kind: Service
metadata:
  name: camel-quarkus-kafka-api-producer
  namespace: <YOUR USER>
  labels:
    app.kubernetes.io/name: camel-quarkus-kafka-api-producer
spec:
  selector:
    app.kubernetes.io/name: camel-quarkus-kafka-api-producer
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: camel-quarkus-kafka-api-producer
  namespace: <YOUR USER>
spec:
  to:
    kind: Service
    name: camel-quarkus-kafka-api-producer
  port:
    targetPort: 8080
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Allow
  wildcardPolicy: None